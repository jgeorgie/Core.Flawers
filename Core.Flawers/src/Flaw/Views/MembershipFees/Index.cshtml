@*@using Microsoft.CodeAnalysis.CSharp.Syntax*@
@using Microsoft.CodeAnalysis
@model IEnumerable<Flaw.Models.MembershipFee>
@{
    ViewData["Title"] = "Index";
}
<meta charset="utf-8" />
<p>
    <a asp-action="Create">Ավելացնել</a>
</p>
<p>
    <a><span id="exportToExcel">Արտահանել Excel</span></a>
</p>
<a><span id="filterText" style="font-size:18px">Filters</span></a>
<div id="Filters" style="display:none">
    <div class="table-bordered"><label>Ընթացիկ վիճակ<select asp-items="@Html.GetEnumSelectList<FeeState>()" id="state" class="form-control"><option value="-1"> </option></select></label></div>
    <div class="table-bordered">
        <label>Ըստ արտոնությունների<select asp-items="@ViewBag.PrivilegeType" id="privilege" class="form-control"><option value="-1"> </option></select></label>
        <label>Ըստ վերականգման<input type="checkbox" id="returned" /></label>
    </div>
    <div class="table-bordered">
        <label>
            Ըստ պարտքի միջակայքի <br />
            Սկսած<input id="startDate" type="number" name="from" value="0" /> <br />
            Մինչև<input id="endDate" type="number" name="to" value="0" />
        </label>
    </div><br />
    <div class="table-bordered">
        <label>Ըստ կարգապահական տույժերի <input id="penalty" /></label>
    </div>
    <input type="button" id="submit" value="OK" />
</div>
<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RealAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AmountWithDiscount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MonthlyPay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrentState)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MiddleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.End)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.LeftOver)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Periodicity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrivilegeType)
            </th>
            <th> </th>
        </tr>
    </thead>
    <tbody id="tbody">
        @foreach (var item in Model)
        {
            @functions{

                public string GetClass(MembershipFee item)
                {
                    if (item.CurrentState == FeeState.Pause)
                    {
                        return "paused";
                    }
                    else if (item.CurrentState == FeeState.Finish)
                    {
                        return "finished";
                    }
                    else
                    {
                        return string.Empty;
                    }
                }
            }

            <tr class="@GetClass(item)">
                <td>
                    @Html.DisplayFor(modelItem => item.RealAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AmountWithDiscount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MonthlyPay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentState)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MiddleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LeftOver)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Periodicity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrivilegeType)
                </td>
                <td>
                    <a><span class="actionsOpener">Actions</span></a>
                    <div class="actions">
                        <a asp-action="Edit" asp-route-id="@item.Id">Խմբագրել</a>
                        <a asp-action="AddPayment" asp-route-id="@item.Id">Ավելացնել Վճարում</a>
                        <a asp-action="Details" asp-route-id="@item.Id">Մանրամասներ</a>
                        @if (Context.User.Identity.Name == "admin@admin.am")
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id">Ջնջել</a>
                        }
                    </div>
                </td>
            </tr>


        }
    </tbody>

</table>

@section scripts{
    <script>
        $(function () {
            var state,
                privilege,
                reactivated,
                startDate,
                endDate,
                penalty;


            $("#filterText")
                .on('click',
                    function () {
                        var div = $('#Filters');
                        div.slideToggle();
                    });

            $(".actionsOpener")
                .on('click',
                    function () {
                        var tr = $(this).parent().parent();
                        var div = tr.find('div.actions');
                        div.slideToggle();
                    });

            $("#submit")
                .on('click',
                    function () {
                        state = $("#state option:selected").val();
                        privilege = $("#privilege option:selected").val();
                        reactivated = $("#returned option:selected").text();
                        startDate = $("#startDate").val();
                        endDate = $("#endDate").val();
                        penalty = $("#penalty option:selected").text();

                        $.ajax({
                            method: "GET",
                            url: '@Url.Action("Filter", "MembershipFees")',
                            data: {
                                State: state,
                                Privilegee: privilege,
                                Returned: reactivated,
                                from: startDate,
                                to: endDate,
                                Penalty: penalty
                            },
                            success: function (result) {
                                $("#tbody").html("").html(result);
                                $(".actionsOpener")
                                    .on('click',
                                        function () {
                                            var tr = $(this).parent().parent();
                                            var div = tr.find('div.actions');
                                            div.slideToggle();
                                        });
                            }
                        });
                    });


            $("#exportToExcel")
                .click(function () {
                    var myObject = {};

                    if (state != null && state != "") {
                        myObject["State"] = state;
                    } else {
                        myObject["State"] = "null";
                    }

                    if (privilege != null && privilege != "") {
                        myObject["Privilegee"] = privilege;
                    } else {
                        myObject["Privilegee"] = "null";
                    }

                    if (reactivated != null && reactivated != "") {
                        myObject["Returned"] = reactivated;
                    } else {
                        myObject["Returned"] = "null";
                    }

                    if (startDate != null && startDate != "") {
                        myObject["from"] = startDate;
                    } else {
                        myObject["from"] = 0;
                    }

                    if (endDate != null && endDate != "") {
                        myObject["to"] = endDate;
                    } else {
                        myObject["to"] = 0;
                    }

                    if (penalty != null && penalty != "") {
                        myObject["Penalty"] = penalty;
                    } else {
                        myObject["Penalty"] = "null";
                    }

                    var querystr = $.param(myObject);
                    var actionUrl = '@Url.Action("ExportToExcel")';
                    window.location.href = actionUrl +"?"+ querystr;
                });
        });
    </script>
}